// Generated by CoffeeScript 1.3.3
(function() {
  var Circle, element, gridLine, hGridLine, height, impact, lander, mars, mx, my, obj, surface, vGridLine, width, x, y, _i, _j;

  mars = $('#mars-image');

  width = mars.width();

  height = mars.height();

  mx = d3.scale.linear().domain([-221, 221]).range([0, width]);

  my = d3.scale.linear().domain([-131, 131]).range([height, 0]);

  element = d3.select('#overlay');

  element.selectAll("svg").remove();

  obj = element.append("svg");

  obj.attr("id", "plot").attr('width', width).attr('height', height);

  surface = obj.append('g').attr('width', width).attr('height', height).attr('id', 'space');

  gridLine = function(x1, y1, x2, y2) {
    return surface.append("line").attr("x1", mx(x1)).attr("y1", my(y1)).attr("x2", mx(x2)).attr("y2", my(y2)).attr("class", "grid-line");
  };

  hGridLine = function(y) {
    return gridLine(-180, y, 180, y);
  };

  vGridLine = function(x) {
    return gridLine(x, -90, x, 90);
  };

  for (y = _i = -90; _i <= 90; y = _i += 10) {
    hGridLine(y);
  }

  for (x = _j = -180; _j <= 180; x = _j += 10) {
    vGridLine(x);
  }

  Circle = (function() {

    function Circle(x, y, r) {
      var _this = this;
      this.x = x;
      this.y = y;
      this.r = r != null ? r : 10;
      x = mx(this.x);
      y = my(this.y);
      this.obj = surface.append("circle").attr("transform", "translate(" + x + ", " + y + ")").attr("r", this.r).attr("class", "circle");
      this.obj.call(d3.behavior.drag().on("drag", function() {
        return _this.move(d3.event.x, d3.event.y);
      }));
    }

    Circle.prototype.move = function(x, y) {
      var xx, yy;
      xx = x > 0 ? Math.max(0, Math.min(width, x)) : 0;
      yy = y > 0 ? Math.max(0, Math.min(height, y)) : 0;
      return this.obj.attr("transform", "translate(" + xx + ", " + yy + ")");
    };

    return Circle;

  })();

  lander = new Circle(0, 0);

  impact = new Circle(90, 60);

}).call(this);
